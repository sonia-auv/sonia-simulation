//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SoniaCommon
{
    [Serializable]
    public class BottomTrackingMsg : Message
    {
        public const string k_RosMessageName = "sonia_common/BottomTracking";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public byte sync;
        public byte hdrSize;
        public byte ID;
        public byte family;
        public ushort datasize;
        public ushort dataChecksum;
        public ushort hdrCecksum;
        public byte version;
        public byte offsetOfData;
        public ulong serial_number;
        public byte year;
        public byte month;
        public byte day;
        public byte hour;
        public byte minutes;
        public byte seconds;
        public ushort microSeconds100;
        public ushort nbBeams;
        public ulong error;
        public ulong status;
        public double sound_speed;
        //  m/s
        public double temperature;
        //  celsius
        public double pressure;
        //  Bar
        public double velBeam1;
        //  velocity for each beam
        public double velBeam2;
        public double velBeam3;
        public double velBeam4;
        public double distBeam1;
        //  distances for each beam
        public double distBeam2;
        public double distBeam3;
        public double distBeam4;
        public double fomBeam1;
        //  FOM for each beam
        public double fomBeam2;
        public double fomBeam3;
        public double fomBeam4;
        public double timeDiff1Beam1;
        //  DT1 s
        public double timeDiff1Beam2;
        public double timeDiff1Beam3;
        public double timeDiff1Beam4;
        public double timeDiff2Beam1;
        //  DT2
        public double timeDiff2Beam2;
        public double timeDiff2Beam3;
        public double timeDiff2Beam4;
        public double timeVelEstBeam1;
        //  Duration of velocity estimate for each beam. [s ]
        public double timeVelEstBeam2;
        public double timeVelEstBeam3;
        public double timeVelEstBeam4;
        public double velX;
        public double velY;
        public double velZ1;
        public double velZ2;
        public double fomX;
        public double fomY;
        public double fomZ1;
        public double fomZ2;
        public double timeDiff1X;
        public double timeDiff1Y;
        public double timeDiff1Z1;
        public double timeDiff1Z2;
        public double timeDiff2X;
        public double timeDiff2Y;
        public double timeDiff2Z1;
        public double timeDiff2Z2;
        public double timeVelEstX;
        public double timeVelEstY;
        public double timeVelEstZ1;
        public double timeVelEstZ2;

        public BottomTrackingMsg()
        {
            this.header = new Std.HeaderMsg();
            this.sync = 0;
            this.hdrSize = 0;
            this.ID = 0;
            this.family = 0;
            this.datasize = 0;
            this.dataChecksum = 0;
            this.hdrCecksum = 0;
            this.version = 0;
            this.offsetOfData = 0;
            this.serial_number = 0;
            this.year = 0;
            this.month = 0;
            this.day = 0;
            this.hour = 0;
            this.minutes = 0;
            this.seconds = 0;
            this.microSeconds100 = 0;
            this.nbBeams = 0;
            this.error = 0;
            this.status = 0;
            this.sound_speed = 0.0;
            this.temperature = 0.0;
            this.pressure = 0.0;
            this.velBeam1 = 0.0;
            this.velBeam2 = 0.0;
            this.velBeam3 = 0.0;
            this.velBeam4 = 0.0;
            this.distBeam1 = 0.0;
            this.distBeam2 = 0.0;
            this.distBeam3 = 0.0;
            this.distBeam4 = 0.0;
            this.fomBeam1 = 0.0;
            this.fomBeam2 = 0.0;
            this.fomBeam3 = 0.0;
            this.fomBeam4 = 0.0;
            this.timeDiff1Beam1 = 0.0;
            this.timeDiff1Beam2 = 0.0;
            this.timeDiff1Beam3 = 0.0;
            this.timeDiff1Beam4 = 0.0;
            this.timeDiff2Beam1 = 0.0;
            this.timeDiff2Beam2 = 0.0;
            this.timeDiff2Beam3 = 0.0;
            this.timeDiff2Beam4 = 0.0;
            this.timeVelEstBeam1 = 0.0;
            this.timeVelEstBeam2 = 0.0;
            this.timeVelEstBeam3 = 0.0;
            this.timeVelEstBeam4 = 0.0;
            this.velX = 0.0;
            this.velY = 0.0;
            this.velZ1 = 0.0;
            this.velZ2 = 0.0;
            this.fomX = 0.0;
            this.fomY = 0.0;
            this.fomZ1 = 0.0;
            this.fomZ2 = 0.0;
            this.timeDiff1X = 0.0;
            this.timeDiff1Y = 0.0;
            this.timeDiff1Z1 = 0.0;
            this.timeDiff1Z2 = 0.0;
            this.timeDiff2X = 0.0;
            this.timeDiff2Y = 0.0;
            this.timeDiff2Z1 = 0.0;
            this.timeDiff2Z2 = 0.0;
            this.timeVelEstX = 0.0;
            this.timeVelEstY = 0.0;
            this.timeVelEstZ1 = 0.0;
            this.timeVelEstZ2 = 0.0;
        }

        public BottomTrackingMsg(Std.HeaderMsg header, byte sync, byte hdrSize, byte ID, byte family, ushort datasize, ushort dataChecksum, ushort hdrCecksum, byte version, byte offsetOfData, ulong serial_number, byte year, byte month, byte day, byte hour, byte minutes, byte seconds, ushort microSeconds100, ushort nbBeams, ulong error, ulong status, double sound_speed, double temperature, double pressure, double velBeam1, double velBeam2, double velBeam3, double velBeam4, double distBeam1, double distBeam2, double distBeam3, double distBeam4, double fomBeam1, double fomBeam2, double fomBeam3, double fomBeam4, double timeDiff1Beam1, double timeDiff1Beam2, double timeDiff1Beam3, double timeDiff1Beam4, double timeDiff2Beam1, double timeDiff2Beam2, double timeDiff2Beam3, double timeDiff2Beam4, double timeVelEstBeam1, double timeVelEstBeam2, double timeVelEstBeam3, double timeVelEstBeam4, double velX, double velY, double velZ1, double velZ2, double fomX, double fomY, double fomZ1, double fomZ2, double timeDiff1X, double timeDiff1Y, double timeDiff1Z1, double timeDiff1Z2, double timeDiff2X, double timeDiff2Y, double timeDiff2Z1, double timeDiff2Z2, double timeVelEstX, double timeVelEstY, double timeVelEstZ1, double timeVelEstZ2)
        {
            this.header = header;
            this.sync = sync;
            this.hdrSize = hdrSize;
            this.ID = ID;
            this.family = family;
            this.datasize = datasize;
            this.dataChecksum = dataChecksum;
            this.hdrCecksum = hdrCecksum;
            this.version = version;
            this.offsetOfData = offsetOfData;
            this.serial_number = serial_number;
            this.year = year;
            this.month = month;
            this.day = day;
            this.hour = hour;
            this.minutes = minutes;
            this.seconds = seconds;
            this.microSeconds100 = microSeconds100;
            this.nbBeams = nbBeams;
            this.error = error;
            this.status = status;
            this.sound_speed = sound_speed;
            this.temperature = temperature;
            this.pressure = pressure;
            this.velBeam1 = velBeam1;
            this.velBeam2 = velBeam2;
            this.velBeam3 = velBeam3;
            this.velBeam4 = velBeam4;
            this.distBeam1 = distBeam1;
            this.distBeam2 = distBeam2;
            this.distBeam3 = distBeam3;
            this.distBeam4 = distBeam4;
            this.fomBeam1 = fomBeam1;
            this.fomBeam2 = fomBeam2;
            this.fomBeam3 = fomBeam3;
            this.fomBeam4 = fomBeam4;
            this.timeDiff1Beam1 = timeDiff1Beam1;
            this.timeDiff1Beam2 = timeDiff1Beam2;
            this.timeDiff1Beam3 = timeDiff1Beam3;
            this.timeDiff1Beam4 = timeDiff1Beam4;
            this.timeDiff2Beam1 = timeDiff2Beam1;
            this.timeDiff2Beam2 = timeDiff2Beam2;
            this.timeDiff2Beam3 = timeDiff2Beam3;
            this.timeDiff2Beam4 = timeDiff2Beam4;
            this.timeVelEstBeam1 = timeVelEstBeam1;
            this.timeVelEstBeam2 = timeVelEstBeam2;
            this.timeVelEstBeam3 = timeVelEstBeam3;
            this.timeVelEstBeam4 = timeVelEstBeam4;
            this.velX = velX;
            this.velY = velY;
            this.velZ1 = velZ1;
            this.velZ2 = velZ2;
            this.fomX = fomX;
            this.fomY = fomY;
            this.fomZ1 = fomZ1;
            this.fomZ2 = fomZ2;
            this.timeDiff1X = timeDiff1X;
            this.timeDiff1Y = timeDiff1Y;
            this.timeDiff1Z1 = timeDiff1Z1;
            this.timeDiff1Z2 = timeDiff1Z2;
            this.timeDiff2X = timeDiff2X;
            this.timeDiff2Y = timeDiff2Y;
            this.timeDiff2Z1 = timeDiff2Z1;
            this.timeDiff2Z2 = timeDiff2Z2;
            this.timeVelEstX = timeVelEstX;
            this.timeVelEstY = timeVelEstY;
            this.timeVelEstZ1 = timeVelEstZ1;
            this.timeVelEstZ2 = timeVelEstZ2;
        }

        public static BottomTrackingMsg Deserialize(MessageDeserializer deserializer) => new BottomTrackingMsg(deserializer);

        private BottomTrackingMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.sync);
            deserializer.Read(out this.hdrSize);
            deserializer.Read(out this.ID);
            deserializer.Read(out this.family);
            deserializer.Read(out this.datasize);
            deserializer.Read(out this.dataChecksum);
            deserializer.Read(out this.hdrCecksum);
            deserializer.Read(out this.version);
            deserializer.Read(out this.offsetOfData);
            deserializer.Read(out this.serial_number);
            deserializer.Read(out this.year);
            deserializer.Read(out this.month);
            deserializer.Read(out this.day);
            deserializer.Read(out this.hour);
            deserializer.Read(out this.minutes);
            deserializer.Read(out this.seconds);
            deserializer.Read(out this.microSeconds100);
            deserializer.Read(out this.nbBeams);
            deserializer.Read(out this.error);
            deserializer.Read(out this.status);
            deserializer.Read(out this.sound_speed);
            deserializer.Read(out this.temperature);
            deserializer.Read(out this.pressure);
            deserializer.Read(out this.velBeam1);
            deserializer.Read(out this.velBeam2);
            deserializer.Read(out this.velBeam3);
            deserializer.Read(out this.velBeam4);
            deserializer.Read(out this.distBeam1);
            deserializer.Read(out this.distBeam2);
            deserializer.Read(out this.distBeam3);
            deserializer.Read(out this.distBeam4);
            deserializer.Read(out this.fomBeam1);
            deserializer.Read(out this.fomBeam2);
            deserializer.Read(out this.fomBeam3);
            deserializer.Read(out this.fomBeam4);
            deserializer.Read(out this.timeDiff1Beam1);
            deserializer.Read(out this.timeDiff1Beam2);
            deserializer.Read(out this.timeDiff1Beam3);
            deserializer.Read(out this.timeDiff1Beam4);
            deserializer.Read(out this.timeDiff2Beam1);
            deserializer.Read(out this.timeDiff2Beam2);
            deserializer.Read(out this.timeDiff2Beam3);
            deserializer.Read(out this.timeDiff2Beam4);
            deserializer.Read(out this.timeVelEstBeam1);
            deserializer.Read(out this.timeVelEstBeam2);
            deserializer.Read(out this.timeVelEstBeam3);
            deserializer.Read(out this.timeVelEstBeam4);
            deserializer.Read(out this.velX);
            deserializer.Read(out this.velY);
            deserializer.Read(out this.velZ1);
            deserializer.Read(out this.velZ2);
            deserializer.Read(out this.fomX);
            deserializer.Read(out this.fomY);
            deserializer.Read(out this.fomZ1);
            deserializer.Read(out this.fomZ2);
            deserializer.Read(out this.timeDiff1X);
            deserializer.Read(out this.timeDiff1Y);
            deserializer.Read(out this.timeDiff1Z1);
            deserializer.Read(out this.timeDiff1Z2);
            deserializer.Read(out this.timeDiff2X);
            deserializer.Read(out this.timeDiff2Y);
            deserializer.Read(out this.timeDiff2Z1);
            deserializer.Read(out this.timeDiff2Z2);
            deserializer.Read(out this.timeVelEstX);
            deserializer.Read(out this.timeVelEstY);
            deserializer.Read(out this.timeVelEstZ1);
            deserializer.Read(out this.timeVelEstZ2);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.sync);
            serializer.Write(this.hdrSize);
            serializer.Write(this.ID);
            serializer.Write(this.family);
            serializer.Write(this.datasize);
            serializer.Write(this.dataChecksum);
            serializer.Write(this.hdrCecksum);
            serializer.Write(this.version);
            serializer.Write(this.offsetOfData);
            serializer.Write(this.serial_number);
            serializer.Write(this.year);
            serializer.Write(this.month);
            serializer.Write(this.day);
            serializer.Write(this.hour);
            serializer.Write(this.minutes);
            serializer.Write(this.seconds);
            serializer.Write(this.microSeconds100);
            serializer.Write(this.nbBeams);
            serializer.Write(this.error);
            serializer.Write(this.status);
            serializer.Write(this.sound_speed);
            serializer.Write(this.temperature);
            serializer.Write(this.pressure);
            serializer.Write(this.velBeam1);
            serializer.Write(this.velBeam2);
            serializer.Write(this.velBeam3);
            serializer.Write(this.velBeam4);
            serializer.Write(this.distBeam1);
            serializer.Write(this.distBeam2);
            serializer.Write(this.distBeam3);
            serializer.Write(this.distBeam4);
            serializer.Write(this.fomBeam1);
            serializer.Write(this.fomBeam2);
            serializer.Write(this.fomBeam3);
            serializer.Write(this.fomBeam4);
            serializer.Write(this.timeDiff1Beam1);
            serializer.Write(this.timeDiff1Beam2);
            serializer.Write(this.timeDiff1Beam3);
            serializer.Write(this.timeDiff1Beam4);
            serializer.Write(this.timeDiff2Beam1);
            serializer.Write(this.timeDiff2Beam2);
            serializer.Write(this.timeDiff2Beam3);
            serializer.Write(this.timeDiff2Beam4);
            serializer.Write(this.timeVelEstBeam1);
            serializer.Write(this.timeVelEstBeam2);
            serializer.Write(this.timeVelEstBeam3);
            serializer.Write(this.timeVelEstBeam4);
            serializer.Write(this.velX);
            serializer.Write(this.velY);
            serializer.Write(this.velZ1);
            serializer.Write(this.velZ2);
            serializer.Write(this.fomX);
            serializer.Write(this.fomY);
            serializer.Write(this.fomZ1);
            serializer.Write(this.fomZ2);
            serializer.Write(this.timeDiff1X);
            serializer.Write(this.timeDiff1Y);
            serializer.Write(this.timeDiff1Z1);
            serializer.Write(this.timeDiff1Z2);
            serializer.Write(this.timeDiff2X);
            serializer.Write(this.timeDiff2Y);
            serializer.Write(this.timeDiff2Z1);
            serializer.Write(this.timeDiff2Z2);
            serializer.Write(this.timeVelEstX);
            serializer.Write(this.timeVelEstY);
            serializer.Write(this.timeVelEstZ1);
            serializer.Write(this.timeVelEstZ2);
        }

        public override string ToString()
        {
            return "BottomTrackingMsg: " +
            "\nheader: " + header.ToString() +
            "\nsync: " + sync.ToString() +
            "\nhdrSize: " + hdrSize.ToString() +
            "\nID: " + ID.ToString() +
            "\nfamily: " + family.ToString() +
            "\ndatasize: " + datasize.ToString() +
            "\ndataChecksum: " + dataChecksum.ToString() +
            "\nhdrCecksum: " + hdrCecksum.ToString() +
            "\nversion: " + version.ToString() +
            "\noffsetOfData: " + offsetOfData.ToString() +
            "\nserial_number: " + serial_number.ToString() +
            "\nyear: " + year.ToString() +
            "\nmonth: " + month.ToString() +
            "\nday: " + day.ToString() +
            "\nhour: " + hour.ToString() +
            "\nminutes: " + minutes.ToString() +
            "\nseconds: " + seconds.ToString() +
            "\nmicroSeconds100: " + microSeconds100.ToString() +
            "\nnbBeams: " + nbBeams.ToString() +
            "\nerror: " + error.ToString() +
            "\nstatus: " + status.ToString() +
            "\nsound_speed: " + sound_speed.ToString() +
            "\ntemperature: " + temperature.ToString() +
            "\npressure: " + pressure.ToString() +
            "\nvelBeam1: " + velBeam1.ToString() +
            "\nvelBeam2: " + velBeam2.ToString() +
            "\nvelBeam3: " + velBeam3.ToString() +
            "\nvelBeam4: " + velBeam4.ToString() +
            "\ndistBeam1: " + distBeam1.ToString() +
            "\ndistBeam2: " + distBeam2.ToString() +
            "\ndistBeam3: " + distBeam3.ToString() +
            "\ndistBeam4: " + distBeam4.ToString() +
            "\nfomBeam1: " + fomBeam1.ToString() +
            "\nfomBeam2: " + fomBeam2.ToString() +
            "\nfomBeam3: " + fomBeam3.ToString() +
            "\nfomBeam4: " + fomBeam4.ToString() +
            "\ntimeDiff1Beam1: " + timeDiff1Beam1.ToString() +
            "\ntimeDiff1Beam2: " + timeDiff1Beam2.ToString() +
            "\ntimeDiff1Beam3: " + timeDiff1Beam3.ToString() +
            "\ntimeDiff1Beam4: " + timeDiff1Beam4.ToString() +
            "\ntimeDiff2Beam1: " + timeDiff2Beam1.ToString() +
            "\ntimeDiff2Beam2: " + timeDiff2Beam2.ToString() +
            "\ntimeDiff2Beam3: " + timeDiff2Beam3.ToString() +
            "\ntimeDiff2Beam4: " + timeDiff2Beam4.ToString() +
            "\ntimeVelEstBeam1: " + timeVelEstBeam1.ToString() +
            "\ntimeVelEstBeam2: " + timeVelEstBeam2.ToString() +
            "\ntimeVelEstBeam3: " + timeVelEstBeam3.ToString() +
            "\ntimeVelEstBeam4: " + timeVelEstBeam4.ToString() +
            "\nvelX: " + velX.ToString() +
            "\nvelY: " + velY.ToString() +
            "\nvelZ1: " + velZ1.ToString() +
            "\nvelZ2: " + velZ2.ToString() +
            "\nfomX: " + fomX.ToString() +
            "\nfomY: " + fomY.ToString() +
            "\nfomZ1: " + fomZ1.ToString() +
            "\nfomZ2: " + fomZ2.ToString() +
            "\ntimeDiff1X: " + timeDiff1X.ToString() +
            "\ntimeDiff1Y: " + timeDiff1Y.ToString() +
            "\ntimeDiff1Z1: " + timeDiff1Z1.ToString() +
            "\ntimeDiff1Z2: " + timeDiff1Z2.ToString() +
            "\ntimeDiff2X: " + timeDiff2X.ToString() +
            "\ntimeDiff2Y: " + timeDiff2Y.ToString() +
            "\ntimeDiff2Z1: " + timeDiff2Z1.ToString() +
            "\ntimeDiff2Z2: " + timeDiff2Z2.ToString() +
            "\ntimeVelEstX: " + timeVelEstX.ToString() +
            "\ntimeVelEstY: " + timeVelEstY.ToString() +
            "\ntimeVelEstZ1: " + timeVelEstZ1.ToString() +
            "\ntimeVelEstZ2: " + timeVelEstZ2.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
