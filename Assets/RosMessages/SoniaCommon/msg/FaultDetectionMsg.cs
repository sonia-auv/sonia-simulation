//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SoniaCommon
{
    [Serializable]
    public class FaultDetectionMsg : Message
    {
        public const string k_RosMessageName = "sonia_common/FaultDetection";
        public override string RosMessageName => k_RosMessageName;

        public bool navigation;
        public bool vision;
        public bool mapping;
        public bool hydro;
        public bool io;
        public bool underwater_com;
        public bool power;
        public bool internal_com;

        public FaultDetectionMsg()
        {
            this.navigation = false;
            this.vision = false;
            this.mapping = false;
            this.hydro = false;
            this.io = false;
            this.underwater_com = false;
            this.power = false;
            this.internal_com = false;
        }

        public FaultDetectionMsg(bool navigation, bool vision, bool mapping, bool hydro, bool io, bool underwater_com, bool power, bool internal_com)
        {
            this.navigation = navigation;
            this.vision = vision;
            this.mapping = mapping;
            this.hydro = hydro;
            this.io = io;
            this.underwater_com = underwater_com;
            this.power = power;
            this.internal_com = internal_com;
        }

        public static FaultDetectionMsg Deserialize(MessageDeserializer deserializer) => new FaultDetectionMsg(deserializer);

        private FaultDetectionMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.navigation);
            deserializer.Read(out this.vision);
            deserializer.Read(out this.mapping);
            deserializer.Read(out this.hydro);
            deserializer.Read(out this.io);
            deserializer.Read(out this.underwater_com);
            deserializer.Read(out this.power);
            deserializer.Read(out this.internal_com);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.navigation);
            serializer.Write(this.vision);
            serializer.Write(this.mapping);
            serializer.Write(this.hydro);
            serializer.Write(this.io);
            serializer.Write(this.underwater_com);
            serializer.Write(this.power);
            serializer.Write(this.internal_com);
        }

        public override string ToString()
        {
            return "FaultDetectionMsg: " +
            "\nnavigation: " + navigation.ToString() +
            "\nvision: " + vision.ToString() +
            "\nmapping: " + mapping.ToString() +
            "\nhydro: " + hydro.ToString() +
            "\nio: " + io.ToString() +
            "\nunderwater_com: " + underwater_com.ToString() +
            "\npower: " + power.ToString() +
            "\ninternal_com: " + internal_com.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
