//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SoniaCommon
{
    [Serializable]
    public class MpcInfoMsg : Message
    {
        public const string k_RosMessageName = "sonia_common/MpcInfo";
        public override string RosMessageName => k_RosMessageName;

        public bool is_mpc_alive;
        public bool target_reached;
        public bool is_trajectory_done;
        public bool[] thrusters_status;
        public sbyte mpc_status;
        public byte mpc_mode;
        public MpcGainsMsg currentGains;

        public MpcInfoMsg()
        {
            this.is_mpc_alive = false;
            this.target_reached = false;
            this.is_trajectory_done = false;
            this.thrusters_status = new bool[0];
            this.mpc_status = 0;
            this.mpc_mode = 0;
            this.currentGains = new MpcGainsMsg();
        }

        public MpcInfoMsg(bool is_mpc_alive, bool target_reached, bool is_trajectory_done, bool[] thrusters_status, sbyte mpc_status, byte mpc_mode, MpcGainsMsg currentGains)
        {
            this.is_mpc_alive = is_mpc_alive;
            this.target_reached = target_reached;
            this.is_trajectory_done = is_trajectory_done;
            this.thrusters_status = thrusters_status;
            this.mpc_status = mpc_status;
            this.mpc_mode = mpc_mode;
            this.currentGains = currentGains;
        }

        public static MpcInfoMsg Deserialize(MessageDeserializer deserializer) => new MpcInfoMsg(deserializer);

        private MpcInfoMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.is_mpc_alive);
            deserializer.Read(out this.target_reached);
            deserializer.Read(out this.is_trajectory_done);
            deserializer.Read(out this.thrusters_status, sizeof(bool), deserializer.ReadLength());
            deserializer.Read(out this.mpc_status);
            deserializer.Read(out this.mpc_mode);
            this.currentGains = MpcGainsMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.is_mpc_alive);
            serializer.Write(this.target_reached);
            serializer.Write(this.is_trajectory_done);
            serializer.WriteLength(this.thrusters_status);
            serializer.Write(this.thrusters_status);
            serializer.Write(this.mpc_status);
            serializer.Write(this.mpc_mode);
            serializer.Write(this.currentGains);
        }

        public override string ToString()
        {
            return "MpcInfoMsg: " +
            "\nis_mpc_alive: " + is_mpc_alive.ToString() +
            "\ntarget_reached: " + target_reached.ToString() +
            "\nis_trajectory_done: " + is_trajectory_done.ToString() +
            "\nthrusters_status: " + System.String.Join(", ", thrusters_status.ToList()) +
            "\nmpc_status: " + mpc_status.ToString() +
            "\nmpc_mode: " + mpc_mode.ToString() +
            "\ncurrentGains: " + currentGains.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
