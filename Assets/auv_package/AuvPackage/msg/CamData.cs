//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using RosMessageGeneration;

namespace RosMessageTypes.AuvPackage
{
    public class CamData : Message
    {
        public const string RosMessageName = "auv_package/CamData";

        public Std.Header header;
        public uint height;
        public uint width;
        public string encoding;
        public byte is_bigendian;
        public uint step;
        public byte[] data;

        public CamData()
        {
            this.header = new Std.Header();
            this.height = 0;
            this.width = 0;
            this.encoding = "";
            this.is_bigendian = 0;
            this.step = 0;
            this.data = new byte[0];
        }

        public CamData(Std.Header header, uint height, uint width, string encoding, byte is_bigendian, uint step, byte[] data)
        {
            this.header = header;
            this.height = height;
            this.width = width;
            this.encoding = encoding;
            this.is_bigendian = is_bigendian;
            this.step = step;
            this.data = data;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.height));
            listOfSerializations.Add(BitConverter.GetBytes(this.width));
            listOfSerializations.Add(SerializeString(this.encoding));
            listOfSerializations.Add(new[]{this.is_bigendian});
            listOfSerializations.Add(BitConverter.GetBytes(this.step));
            
            listOfSerializations.Add(BitConverter.GetBytes(data.Length));
            listOfSerializations.Add(this.data);

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.height = BitConverter.ToUInt32(data, offset);
            offset += 4;
            this.width = BitConverter.ToUInt32(data, offset);
            offset += 4;
            var encodingStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.encoding = DeserializeString(data, offset, encodingStringBytesLength);
            offset += encodingStringBytesLength;
            this.is_bigendian = data[offset];;
            offset += 1;
            this.step = BitConverter.ToUInt32(data, offset);
            offset += 4;
            
            var dataArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.data= new byte[dataArrayLength];
            for(var i = 0; i < dataArrayLength; i++)
            {
                this.data[i] = data[offset];
                offset += 1;
            }

            return offset;
        }

        public override string ToString()
        {
            return "CamData: " +
            "\nheader: " + header.ToString() +
            "\nheight: " + height.ToString() +
            "\nwidth: " + width.ToString() +
            "\nencoding: " + encoding.ToString() +
            "\nis_bigendian: " + is_bigendian.ToString() +
            "\nstep: " + step.ToString() +
            "\ndata: " + System.String.Join(", ", data.ToList());
        }
    }
}
